;;
;;
;; Gathering all tests.
;;
;;


;;;;;;;;;;


(def fail?

  ^{}

  false)


;;;;;;;;;;


(defn exec

  ^{:doc {:description ""}}

  [path]

  ($.trx/precat `(($.state/!.tmp '(($.file/!.exec ~(str "module/shell/src/test/cvx/convex/test/"
                                                        path
                                                        ".cvx"))
                                   $.test/*n-fail*))
                  (when-not (zero? $/*result*)
                    (def fail?
                         true)))))


;;;;;;;;;;


(when (and (defined? fast?)
           fast?)
  ($.test/filter.set (fn [meta]
                       (not (:slow? meta)))))


(exec "shell")
(exec "shell/account")
(exec "shell/catch")
(exec "shell/code")
(exec "shell/db")
(exec "shell/file")
(exec "shell/juice")
(exec "shell/log")
(exec "shell/perf")
(exec "shell/process")
(exec "shell/state")
(exec "shell/stream")
(exec "shell/test")
(exec "shell/time")
(exec "shell/trx")


;;;;;;;;;;


($.stream/!.txt.outln
  (str $/line
       "~~~"
       $/line
       $/line
       ($.term/bold)
       (if fail?
         (str ($.term/fg.red)
              "Some tests did not pass.")
         (str ($.term/fg.green)
              "All tests from all files passed."))
       ($.term/reset)
       $/line))


(when (or (not (defined? dev?))
          (= dev?
             false))
  ($.process/!.exit (if fail?
                      42
                      0)))
