;;
;;
;; Testing `convex.shell.account`.
;;
;;


;;;;;;;;;;


(def T
     $.test)


;;;;;;;;;; Test suites


(defn suite.main

  ^{:doc {:description "Main test suite."}}

  []

  (T/group '((T/path.conj 'convex.shell.account)

             (T/trx '($.account/key? $.account/fake-key))
             (T/trx '(not ($.account/key? 42)))

             (def actor
                  ($.account/zombie (def foo
                                         42)))

             (T/trx '(= 42
                        actor/foo)
                    {:description "Actor deployed."})


             (T/trx '(= $.account/fake-key
                        (:key (account actor)))
                    {:description "Fake key set."})

             (T/trx '(= *address*
                        (:controller (account actor)))
                    {:description "Controller set."})

             (T/trx '(= 24
                        (do
                          (eval-as actor
                                   '(def foo
                                         24))
                          actor/foo))
                    {:description "Able to use `eval-as`"}))))


;;;


(suite.main)
(T/print "convex.shell.account")
