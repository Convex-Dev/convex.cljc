;;
;;
;; Testing `convex.shell.state`.
;;
;;


;;;;;;;;;;


(def T
     $.test)


;;;;;;;;;; Test suites


(defn suite.main

  ^{:doc {:description ["Loading a state."]}}

  []

  (T/group '((T/path.conj 'convex.shell.state)

             (T/group '((T/path.conj 'time-travel)

                        (def a
                             1)

                        (def s
                             *state*)

                        (def b
                             2)

                        ($.state/!.load-continue s
                                                 `(def c
                                                       ~(inc b)))

                        (T/trx '(= a
                                   1)
                               {:description "`a` is still present."})

                        (T/trx '(not (defined? b))
                               {:description "`b` was not present before saving the state."})

                        (T/trx '(= c
                                   3)
                               {:description "`c` is the result from executing the given transaction."})))

             (T/group '((T/path.conj 'init-genesis-state)

                        [:cvm.sreq :dev.genesis-state]

                        ($.state/!.load-continue $/*result*
                                                 `(def s
                                                       (quote ~*state*)))

                        $
                        ($.state/!.load-continue s
                                                 $/*result*)

                        (T/trx '(= $/*result*
                                   $)
                               {:description "It looks like libraries were deployed while loading the genesis state"}))))))


;;;


(suite.main)
(T/print "convex.shell.state")
