;;
;;
;; Testing `convex.run.key-pair`.
;;
;;


;;;;;;;;;;


(def T
     $.test)


;;;;;;;;;; Test suites


(defn suite.main

  ^{:doc {:description "Main test suite."}}

  []

  (T/group '((T/path.conj 'convex.run.key-pair)

             (T/trx '($.trx/precat '(($.kp/gen)
                                     ($.kp/key-pair? (def kp
                                                          $/*result*))))
                    {:description "Generate key pair"})

             (T/trx '($.kp/public-key? ($.kp/public-key kp))
                    {:description "Public key predicate is consistent"})
                    
             (T/trx '($.kp/private-key? ($.kp/private-key kp))
                    {:description "Private key predicate is consistent"})

             (T/trx '($.trx/precat '(($.kp/seed kp)
                                     (blob? (def seed
                                                 $/*result*))))
                    {:description "Retrieve seed from generated key pair"})

             (T/trx '($.trx/precat '(($.kp/from-seed seed)
                                     (= kp
                                        $/*result*)))
                    {:description "Rebuild key pair from seed"}))))


;;;


(suite.main)
(T/print "convex.run.key-pair")
